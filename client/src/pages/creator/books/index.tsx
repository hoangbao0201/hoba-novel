import Head from "next/head";
import { GetServerSideProps, GetStaticProps, NextPage, NextPageContext } from "next";
import { useRouter } from "next/router";

import useBreadcrumbs from "@/hooks/useBreadcrumbs";
import FormCreatorBook from "@/components/FormCreatorBook";
import ContentFormMyBooks from "@/components/FormCreatorBook/ContentFormMyBooks";
import { getBook, getMyBooks } from "@/lib/api";

export interface CreatorBooksProps {
    books?: any;
}

const CreatorBooks: NextPage<CreatorBooksProps> = ({ books }) => {
    const router = useRouter();
    const newRouter = useBreadcrumbs(router);

    console.log("BOOKS: ", books);

    return (
        <>
            <Head>
                <title>{newRouter[newRouter.length - 1].title} - HoBa</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <main>
                <FormCreatorBook
                    tab="books"
                    title="Truyện của tôi"
                    description="Danh sách các truyện bạn đã đăng"
                >
                    {books ? <ContentFormMyBooks books={books} /> : <p>Bạn chưa đăng tải truyện nào</p>}
                </FormCreatorBook>
            </main>
        </>
    );
};

export const getServerSideProps : GetServerSideProps<CreatorBooksProps> = async (context) => {
    const token = context.req?.headers.cookie?.split("A_token=")[1];
    const books = await getMyBooks(token as string);

    if (books.data.success) {
        return {
            props: {
                books: books.data.books
            }
        };
    } else {
        return {
            props: {
                books: null
            }
        };
    }
};

export default CreatorBooks;
